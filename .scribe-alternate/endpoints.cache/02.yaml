## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Side Projects'
description: |-

  APIs for managing side projects.

  Note how the URL params for the endpoints here are automatically generated by Scribe.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/side_projects
    metadata:
      groupName: 'Side Projects'
      groupDescription: |-

        APIs for managing side projects.

        Note how the URL params for the endpoints here are automatically generated by Scribe.
      subgroup: ''
      subgroupDescription: ''
      title: 'View all side projects'
      description: |-
        This endpoint's response was gotten via a "response call"â€”
        Scribe called our API in a test environment to get a sample response.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '45'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/side_projects
    metadata:
      groupName: 'Side Projects'
      groupDescription: |-

        APIs for managing side projects.

        Note how the URL params for the endpoints here are automatically generated by Scribe.
      subgroup: ''
      subgroupDescription: ''
      title: 'Start a new side project'
      description: |-
        _Even though we both know you'll never finish it._

        This endpoint's body parameters were automatically generated by Scribe
        from the controller's code. Check out the source! </aside>
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {BEARER_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of your side project. Must not be greater than 80 characters.'
        required: true
        example: 'The SideProject API'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'A longer description of your side project. Must not be greater than 255 characters.'
        required: false
        example: 'Suscipit qui cumque magnam tenetur quia nemo.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      url:
        name: url
        description: 'A url to your side project. Must be a valid URL.'
        required: false
        example: 'http://www.reilly.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      due_at:
        name: due_at
        description: 'Due date for the side project. Must be a valid date. Must be a valid date in the format <code>Ymd</code>. Must be a date after <code>today</code>.'
        required: false
        example: '2085-06-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: 'The SideProject API'
      description: 'Suscipit qui cumque magnam tenetur quia nemo.'
      url: 'http://www.reilly.com/'
      due_at: '2085-06-01'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vVZ1acg6D48khb3feE5d6Pa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/side_projects/{id}'
    metadata:
      groupName: 'Side Projects'
      groupDescription: |-

        APIs for managing side projects.

        Note how the URL params for the endpoints here are automatically generated by Scribe.
      subgroup: ''
      subgroupDescription: ''
      title: 'View a side project'
      description: |-
        This endpoint's response uses a Fractal transformer, so we tell Scribe that using an annotation,
        and it figures out how to generate a sample. The 404 sample is gotten from a "response file".

        <aside class="success">Also, pretty cool: this endpoint's (and many others') URL parameters were figured out entirely by Scribe!</aside>

        Also, this endpoint uses a mix of docblock tags and PHP 8 attributes.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the side project.'
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 13
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 203
        content: '{"data":{"name":"suscipit qui cumque","description":"Tenetur quia nemo sit est.","due_date":20260208,"owner":{"id":1,"name":"Kurt Kub","email":"juvenal97@example.org","email_verified_at":"2023-12-13T23:29:24.000000Z","created_at":"2023-12-13T23:29:24.000000Z","updated_at":"2023-12-13T23:29:24.000000Z"}}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Not found","resource":"Side project"}'
        headers: []
        description: 'Side project not found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/side_projects/{id}'
    metadata:
      groupName: 'Side Projects'
      groupDescription: |-

        APIs for managing side projects.

        Note how the URL params for the endpoints here are automatically generated by Scribe.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a side project'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the side project.'
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 13
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/side_projects/{id}'
    metadata:
      groupName: 'Side Projects'
      groupDescription: |-

        APIs for managing side projects.

        Note how the URL params for the endpoints here are automatically generated by Scribe.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a side project'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the side project.'
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 13
    queryParameters:
      queryThing:
        name: queryThing
        description: null
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: 'null'
        headers: []
        description: '204, Nothing to see here'
        custom: []
      -
        status: 202
        content: null
        headers: []
        description: 'An extra, for fun.'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/side_projects/finish
    metadata:
      groupName: 'Side Projects'
      groupDescription: |-

        APIs for managing side projects.

        Note how the URL params for the endpoints here are automatically generated by Scribe.
      subgroup: ''
      subgroupDescription: ''
      title: 'Finish a side project'
      description: 'Will you ever?ðŸ¤”'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"message":"Not found","resource":"Side project"}'
        headers: []
        description: 'Side project not found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
